<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIABtGQAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgAAAAAeRn3ugAAGTRJ
        REFUeNrtnHm0XdV52H/f3me4w5vEexYawGhGkpmMMAgz2CYIMMYDwcElduy4bpx4telK6tWs1SZ106yk
        a6Wp+0eXXXclXk6apM5yHeIRG2McBlsIJEACAQKDEJqQhIY33OlMe3/94zw9PWhqe+lZ99nmnD+2rvY5
        7557fufb37C/b2+5ktf3YV7nz18BqABUACoAFYAKQAWgAlABqABUACoAFYAKQAWgAlABqABUACoAFYAK
        QAWgAlABqABUACoAFYAKQAWgAlABqABUACoAFYAKQAWgAlABqABUACoAFYAKQAWgAlABqABUACoAFYAK
        QAWgAlABqABUACoAFYAKQAWgAlABqABUACoAFYAKQAWgAlABqABUACoAFYCf/CjaGeA7PQXtdfw8Agjm
        5a5JtwiFrGMji+toGL3eAERFLBDG1oCN1b7uJCAKBbBDAsigyutOByCzWubz+Ssr0G8AedcBrpsDvpcC
        mvT0daED0qIh+HZeDIp2knDYkHTEhORtpQ5Z0rTgs6jPr6R/t/MOQESkbEAQ4eR/XOEBin5Lg/RvX2Et
        nzM04PPAgmYmBHINBdTPjzHsoxkUAGsBTAwgMQBheXaenIHXvRXotyNUuMCCK2xwcghoTihQpDYW0H57
        BfbcM/jlPgkEtIMFOlkouFbPxaKtbh4Zuu00sGStREK0leShxbezUCDtBgZ8as88jTM6BNQroK5sHeCd
        OkWdeg+FqgPn1YEqqoArFPCFAtoPk3BGJcBEAkgcABJFBgzUIwStxYLxYd1g1DQsYjSuCRLGARDU7Myf
        n+FD+r29fhn5TLfITMs8hUR9jwbl/9POV0jUbzPocg/43AGaFwBFPmvA+357gmdUB2gp1gUCJIUVilav
        iMS3unlo6LZTG5C0Egnx7Y6PhLSdh4Jvp0G/3swZvY9re8C3UsB12g6KQnMnLteiwKfqMkidpopLNXWQ
        5GkBRZJkvxBDwDYMIM0IMPW6BWuwVq3FWCTEhBAKoWBCQgORDS3YKAr7ppP6bAVyF1pwuQ3BZyYUNCMS
        cC4wgBNDX/3BfluBMFLABgqYugJS41QXZUjUR4vQD11TKvZSv/tS5ece0NwBFHl5wp+6iv7ZgjNkBbwK
        4J0B7XV9IPTambUUU9NWIAuNdtqZCei1UkJcu5sHhqSVWYvr9IwFLYwA/owKxE9bArSTAX6qo6DtiRxc
        L+8W+J7LEkgKzTLJMi0SXKKup5p433OSZZqn+K7LEkiTrKvQm0wAN9kF6CU/HwAksGUrIDYQEFERMCpl
        LIAggEEENYIoRtSUXaa8FjGAtWbmG6dnUn4OhkBgACnNWFizYAJbDxErUV2wSL2GFeK6GKNhw4hV0wyw
        ENdFrEQNwdqwbiCoBZyMpc4YgPkNhmaFRPMVDPU7FlCd9Y/OVvbzFAz1wQ8o579camLBdYqwaXwnD5pW
        e6k0ItIutTqa5EFdcKnUBDIfGfBFH3yjn7oOKBDQxAdALwkMvtUrIqOtJJOQTqqFCZOuOo2Ltvcu9i3n
        i8im7SK3wfRVaSvVGG11fSSkU3kkaCsJDKQda8F3sUBWBIAvjeXPyhDQXgFokiholjjwBc6jDi1QD3gc
        4PEKHvWgHqfgpq/CeXWKL7RQKFzhwOe5A/KsAHwZK2WpAj6Zk9f005YAiayAhLEBCaJIEPVxTcQXphEI
        OaZhJVNpBFJ4arE4R1QXKbxtWFFnGxbxUg8xQi0CSxwLxoaxgA0jARNFAgSRAczckml9sALqjYA6sUDm
        ghCK3EbgcokEnxEZcEVgZ65SNdAfw9AHJVjmfKS8U6QCBFYAawQwtXIsBgJIqAAifTMMZxaAN8yo8UID
        wXVdWDe+l9uG1SSVekSaaC2Wop3Hg4jLTCRooaGA91YAL/IaK+BD8p+W8voJdICqn3FWZt7qzMlSDwM+
        MQa05wKg2wsE0jYhZFN5aMhbiQm1nfpcom7XFy7O2s4VkW/5kBrt9PJ/dWP44mSSSkjSSjTCT3V9JCSt
        IhRcOw0NJD1rkGv/+bXJQci9PWUFnJyevPxYCfDByEhUtCe6GGSg9Ed9np60PY0IsqwpUEwqoKmNBc2z
        kSHVQ7mtQ+HUW5zTAl8Auc+BUsU7p/nlv23d57aOfHKDv+jZV4RcJVMyb4qczFtNCleLKFKNamgvN4E/
        91+eI8t2H6UtwwJpb9iC7zSCMwFA7YYb1w6FrnvoiQf3+OYnl5dJ/N6hJx87jAB3vM2dFI/jf3ZEMEMI
        SHPg4xt98dnNNSD2JoCo5msY4yAwQY5asYCxXkYuC3sDYdj0GsbWEwhRrpHBhkVokNgFAQQR8QKLnYwg
        qimRRZoIEAcGMM3THBM/BkBw+weHEViw9C0XfKptzl3lpwXtxn133p0KnL26mPYl5GiscnJKx5x/45ja
        9zxdAHYAwAyqIM2uC+rUfWEbErtUGtY2rTOeZvI3H4ru2TucmRhqVkOwQ84K1CMjYId09N8vlju/bDH7
        v/RO9w+vCGV1oSlvf7qx0o8G4K/8cNO39kzUFy5q7OoI3vu0BbZRN8v/9dIvJII6XxxzAsiJ/NQfmutG
        nRSXrXrGAHhFxAMSDnkjnroGOGqhtVBvCCD1724NJghCVD0BqoIx056TGBAvS86TYS8i+Rfv0snSTnqA
        cjR6RYxXylCak5NLP85N/NEAgncM+GOffjy3Q+dfeb8KYLd/xkk0tnHTSHjboa8AmMN/OFH+gokZKfRL
        r6XoDi24/llA/UVL2L9n3crG+HMvtHwUr1yVH9lxwbrhqaefyWukPQV8d/2KYGJ74cQ0V64Yzg8++4rg
        zOjycwbdsef3OZFFSwMnwyvM+KS95CyO7AT8gjVvbHb2/XDcgFy0mL0vrl491H7u+VxAg+WrRoP2oZeO
        +tMHoNHZmH1bU+OOHtmiRgF6Bx3sfvSJ3x2Nbn3oiADu2HFzyjSURuuqpez+/kfN1V/dZ7RV3HKL3zr1
        1ob4ie997mDmr/4NffaxmxeIth/58wO0c0C7ybvv0MefnEjN2z78pgEhP3DnXeMDv3b94prgTtz7xRP6
        m1c0VG+81nzhK7UPXSbffUrV/NKvrIpF091/f38hvPcmfWDi7YNGp+79qwnRhR+6ZoEVnx394jfktAFI
        0cGvuu3Bo5makxyllLAHVn7Un3vRd2ZP4paGshPF6Mh1Rn/w7U3LF7/tb3CZIHppKIUxC25f+PtHC9BV
        5weF2oFNb/yTZ7wAmosI4lLd9PsLFWfC5b9t/mLshlUud6Ed+2e1/9odHM2V5qBpnLyVvOe3BhRnaxcs
        P+vOoufEbYysokO3uc8V9U9sUt92tXhRR08fANkjG+3Qb966e9eu3eOv8cu23DYUrr4HwI4FAvjJApCG
        gL98Dcc2v7J5ubzj28dNWADB5F07z960zl17++dCIEjv3c4VV9nzP/KfJhWQIC0ZrvydhX787p1n3bI+
        WD+w/6u//NCzJ8bev47rvrntvsmrBnj6qej56d/hL/1Y0x+658DSTUsbH969LTJK1Hl436KrB/W6u364
        eqNPv/RwPnLRgm0yBx0g9yx9T1OWLL2me+C+b0686sx4e5ghA/hFf+wEmPrjfabUxtq8IebRvTzwrpEV
        G79hB32oZJ//Py7a8qk3cdO3pgC++j9z/63fe5ffsGYyKLkJYAfetcx3P3t3R7f/+vYHg8HvbD7ofXbg
        vwwPXfj0N7atH5RH/jw8qeOCmxb4Y3/6KGz/gzeM3LBDDWSf/1oW7P24jCx/bqRGuvPZzG2p5XMC0P2L
        x9+xfmFd6mtWn//fTrzKQbAqDoDwHAA5MZPN8hdc6HvfS8zzj20ym+7vmMBgXrovEvZ/d50sPu9JkInv
        FNbmd7+9MbhiZ0MAOxgBDF0q8syDZogDf5pKGLab14zGNBxmJChLC2eKZnRojZqt2y3s2PpuXTM4CWb/
        PxbWPfyBBXZEjrRHBv/dnn0v7X4hNXPxAyTfvPWsZWsvetOAvm3Hl2cDOGdY9RVvgOxlB8jUTD4z2jTg
        04tXoTUn6y/5vlWQY128kUNFGNYVZHy/M5ru7TRMs6yU9b0cwA7CK6k4bG7Q4H23LooNFDozb3HqdcYN
        9LCz4A4rjdokyLGOQJpDYHZ/6Y7hNyy83HWe+PwLc9ABqBp/9Mgj9at/d8icPwulb76zrt1nFDCHPzUu
        gLanQ1i/5nKvw78GqGrjhm3dNINBM+XiaMRSHM9AG0F7JGvVa2jnpBXwgE62YDjodLReV1rXf7yRPb47
        rb1jAb7LKFB0Gyd/RZ4hIwZUh0WzMrt06gcWf/fUxpVnLxhsXhP+x7acNgBddMnW4yp0tp8YPtnlnGAW
        3nGtt09OuznHX6kDrtew4NtB47pRrwWCIoHfsOYHTsWtWLdXsnOvtRw/mCo69kt/WSTBDYP09ui0FQAo
        pp690q9bf3+mZ/3qU9vzq5u64w/3J2MXnkXekZ4HndKBaZvTemm5bjjvRdNdskFl79RrHlLCHY/VBs+6
        8f2sXtiaA4Dr/sXuLbuOF8Oblnqe84AuebeXxuJLVogc/tv29NtQOeV5ebfkWszXv9000Gv+ztnD1z/k
        QJufHH166LYrvN182AD2Y80n3cYPYHbtsbOsgOHuW8bO+jdjTy+4bdPUVz5rURsEzZvPVTFW8inRjVcE
        5oVpC3Xfxvi8f3vnobFbl2vyvfQ1DxL9ln/oQO/EuEqez8ERWvD22rq1aeJqdcyOBwXw568FEUX2fu6J
        6ecPGwDBkABmSK9ZolPf3B4BTt/6Xn/V2l2i6PL/0Anranb9b98Q0NFPdKSBOf53vYFZViAYeu5vPxGv
        +INuVNORZrTrFrnwj/eedUmsBMMm33Gxv+B/mO1/VAblsvmuW83F69I4wn/roddoOr/+poFbxrvxGwJ5
        /Ig5fUcoudueF9froN1tn39FsNNKWLNjD391jwDGqn1VlZOMbQpl54t1AOsfuKGx5KZDIXJwau0Imu/8
        zOEFBmRizwVDULzwl1tNfSCwBjtUNxji6OvF7eeEI/ipu//aPHjB9bU3v9k/GbxJjDX69TVvCRbI+qUH
        jMUg6eenbhmr1XDHv/mlVDC21JRiLULjaNQYAN/Z8oVsDkow+YcH1q45Z9AmB7Y/2TFkdz+uAFnr5d2H
        nAF4eEpPvDptWd+6nc3JtHP81BdGZTwWzKFPX7a2MfHUtuOxVZD2p1e+eXjq6a3HLOz+X7E/KsX3p4KD
        Dim+tm3D6pHs4KO7CjP13x+6ZEH2/A8uXMuTghz5z1etH2g99Yq/7wV+CNL+qwcuW9bsvvTYbi/w0An2
        eJD21wZ4zm55ft2qs+PkyM6nej/aD/hxk6LqJbDiCm+EU6kcnQmyVHntVMysLkVB8z96J9t+74TUAl90
        XdD42G+w79dPDOlEauoD2k59NBgkHSfNuhSJqYk3rrDW4IoAY31mrCKoQb013hmZuYNXa50v3/xMZ/lB
        vVjjvM4tGgSxeD9TzD7zrNP1X86IgPMh4NPYgPZsLGjXNQ30knoNWpkTJU3Ihm2vIO8qQO57hSWt+RRT
        FDbxQlrXdibatGlLa4P4dhYNiU86dtDi224wEJv2GhFoN4yBVGvgfB69+reVH8Si7idIe5zmPIovVWtW
        ThClAK7nmMlZpKkHsrwAdWqMNQ7xbjq8t69N9eopeVMHTqcrip2Cc4WC5oUHirLAMCtKT0ABP7eCstOc
        FZ5+gnppciKAYNgAdsgAMqAWaIYxSOyf38pzgfVhaEIH0eGtxZGsZuKsIAo0yggjqRUqNZF619Qgzn1d
        sI00NlDDWrCDPgTqYQjYYQEop8SCgTnNnvcjPe7CEJ8XPjD4ngtrQVDkLhBcZkKDzwgt5IWNmIcqsX4A
        kDLZUQr67Oi87Jo+IfOzeK4PmSHNCAVNfRhQdF3YMNMZc5+bQKZPT3cViakZNPNxv7Jlp5scfVWJR+nO
        F0ZAczVAmgcCac9Y6LVTCUnbWRFJO/MFUT6VZDbwrW5KpJ1O4iLJp5IssNpKcolI25nG+FbPxWV63OBb
        SWgg6RgLvqMBkJbp8czOQ3rcpQD0CoCsA1C0CsC3eoDvdgrQpJeAZqqZkilFoQ4oNHP4hDxDU+9SJStI
        HT45aQV8aQV8aQW8U9Ci8ID7p6zAnMbOaQ6Bct0bNQEIA4BgIADMgAFM3QcgNWKQMCcUwhQbiHUQiIBK
        GVFMT+9RdplpK1C4XyQrUBYDa+qikKLjwoZ1ndw2Q+0m0ozp9ag1cO3CDgQ/h1bAq8yeJxGZzghPP7ua
        f/KDejlV/ePVcrKK4FUa5tUY9czUc83tWzVYc8Xq4FTO+PxBbWw4Nap00UXTH964RmfX/0qZz7IGwJT1
        A7Od9sve8NpxrQsvkZ89ADr0kXetf/eHBhTv8cANb/DhYqPee+fV4xtno15Tp8Ojbmq8p961xie9d93J
        jsenk1M5pJPjKfjuZNuh3inAW8a8+tJD1rKcSJuLUO9LX1pPlRf5uS6ymZMfoDd0/jqNb7/uzkUX15bs
        vcdcvTabPHpc6xtrY9uiSw/fd/zwkNavGTv8YName/a6scWPPJY0Nq051ruvlcvYpfckiy/ZHl19zvF/
        TIfXfzd945Knz3tjvP85C37lJXbzi+aKZ8dH12xzV63sbj7UO+7HLqwvemK72qvWdL9/0GxYX2zbHW48
        r7f58LxVidXPvT816f0r45FftVtW3aL7ju1pN64K4/eYHR/euG31Rrdkg3vzm+7jYrfsArfsgweev21M
        3796Mx8aU3x2yfri7Yvzm5ffLx+Nm28N/IqL3TkfCV5SoLHuiYN3nC1vHfEjG/W8a7ecuFQXbvCjtydP
        3LyiuPrSh4/dMTx68xMvbrArrtly4s1zGhtzAmAlEyQNYnn2209+7aLm3mO7uwOCHPnB9r1PPf7YyuYA
        cjS+ZuKHRrUW79j2g+MrFqz7yjN3PxtKEKePbRxdt3Vg9Td2fHlgqZdQBGT/Pd0AyO/d8d3967AW9ZK4
        K/NtALL7gUeeX2YuZ+XAomXt8cubm91k/tb80fnTAb3OOufc+omeGFFRNdOarFCTFMaHxmKOfWnPxvcK
        2Lqvk8YD4bCYcGBkKDRPLXzf1FGhMTwSqItHBkcNHJlO+gciRr23Lgqk8+WdKz4QKdBVkwl+6ujR773s
        v/Hw6AeH23+/c+X7g3kD4O65+tbLfvnKe5xfdctbbnumS1n0jgEjlFn91TdMHGwIglgw0n3yV972vuWE
        Fpl88X2P+u6u9135gdbhVuuWa99uZyY14puvvHnJM2739ZdvavpF78n2xUbKLzTitoym9UWtoVvjPaFZ
        9O5sb21uUjyXQkkZ333O8t5dB2V04YGVP7zfCQd7ptjviwNODrfM1Mt0Dh8N1qb3dszEkfToK1ZePrI3
        X3x46IkjYvDNs76OvBSuPH531790zuCOvUfN1CEA8r3LorsOyb6hZc+98PJEsi6+97jpHJLuyyrHxl9O
        1psHxnvja0fvPziZrou/d2IuSmCOjpB6443XtTd9xnsXiYomNkKl5xuipEkjwmfteFBJWhoNS6911aU7
        l639s3E7FOgHd31nOKbT9c0Biqk8GA6UnAhwRQgGhyCiXsCoGlRQBA8ieMBMt/MlASBGjORq24fFp6EI
        2rUBol0Xi0gviwIkS00skuaGmkmLo9Fq880DaBAGfltqYnqFoSZFTzQMxLfS2EDSiQLBTdlQhJ6PRPB5
        gDBr25XZ7fxJwElBUDOTHyr3hMECzoUCPg1CyNu+1pC85cyQ9e3cDgU6lclAjV5HG03cVGGHArSrTYE8
        qxvQNLRAUc7InqG62f6tGClnqMv1kdNbaORyaguNsqv/R/9uOl3NNmsFlESn2jO2Jmh+AagAeR6GUCRS
        N/huEdXndfO0Mw4gsxa0a+pANx+wuJazQ4FvZ0KTpEdhY9IkrAt5zzQMrquNAJI0qslJ5dHHcvmf+oqR
        6UWxuYLmebkcxCtMT3aBKr6TdgvoJb0U0iTpgeumHQd+asoDyWQBuLLoJEl/niRAmgBmUARkwAdg61kY
        YGo9U4M480EIpc9spFxLKQZESje6fCHGzCoIOrML2/phBWavGnDeGijyIASfmkjQlGimq/+LCPthBWZX
        M5fKPggATB1AyhUjZVf/d1SpdpTswz2mF4t6gKyTc0pVTu8iAzP7B+gv1C4yrhcI+JYEoK00Foqp1MVC
        p+1iIW1loSGfSmwA7baL5TV7iXXNmX8/Z1QHlGpcyvVgVmekQZ06FZxHSzMJ6tSrgJu1o5gWfdhKpd+r
        x5M8jiBPwxhcYmqCJr5uIE+jCCgI6Ksj1Pfl8z9rR2UF+n1D/X9a9BcWgC8ANPVw0qXvTWZANtkD3FRb
        Qdst94sKwHUVcJ1yG+lEQdMsA7IsVcjT1INL0vkEcIZ3lJzeUUVAgsiCGFMzYKQWgJEoFMQE8TzOEFRW
        4HX+/BWACkAFoAJQAagAVAAqABWACkAFoAJQAagAVAAqABWACkAFoAJQAagAVAAqABWACkAFoAJQAagA
        VAAqABWACkAFoAJQAagAVAAqABWACkAFoAJQAagAVAAqABWACkAFoAJQAagAVAAqABWACkAFoAJQAagA
        VAAqABWACkAFoAJQAagAVAAqABWACkAFoALw83n8XwESVMhER9JMAAAAAElFTkSuQmCC
</value>
  </data>
</root>